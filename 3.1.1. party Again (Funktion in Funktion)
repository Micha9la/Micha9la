3.1.1.
void partyAgain()
{while (onBeeper())
    {
        turnLeft();
        pickBeeper();
        climb();
        if (frontIsClear())
        {
            moveForward();
            if (frontIsClear())
            {
                moveForward();
                if (frontIsClear())
                {
                    moveForward();
                }
                else if (!frontIsClear())
                {
                    hangHigh();
                }
            }
            else if (!frontIsClear())
            {
                hangLow();
            }
        }
        else if (!frontIsClear())
        {
            hang();
        }
        climb();
        turnLeft();
        if (frontIsClear())
        {
            moveForward();
        }
    }
}

void climb()
{
    repeat(5)
    {
        moveForward();
    } 
}

void hangHigh()
{
    dropBeeper();
    turnAround();
    moveForward();
    moveForward();
}

void hangLow()
{
    dropBeeper();
    turnAround();
    moveForward();
}

void hang()
{
    dropBeeper();
    turnAround();
}

ODER diese Version nutzt eine Funktion die sich selbst traegt:

void partyAgain()
{
    while (onBeeper())
    {
        turnLeft();
        if (frontIsClear())
        {
            pickBeeper();
            hangOneLampion();
            turnLeft();
        }
        else
        {
            turnRight();
        }
        if (beeperAhead())
        {
            moveForward();
        }
    }
}

void hangOneLampion()
{
    moveForward();
    if (frontIsClear())
    {
        hangOneLampion();//dadurch merkt sich das Programm wie oft Karel nach vorne geht. Hier wird die "Spule" quasi aufgedreht
    }
    else
    {
        dropBeeper();
        turnAround();
    }
    moveForward(); //hier wird die Spule abgedreht
}
